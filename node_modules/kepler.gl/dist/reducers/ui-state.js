"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.uiStateReducerFactory = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var uiStateUpdaters = _interopRequireWildcard(require("./ui-state-updaters"));

var _actionHandler;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].INIT, uiStateUpdaters.initUiStateUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_SIDE_PANEL, uiStateUpdaters.toggleSidePanelUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MODAL, uiStateUpdaters.toggleModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SHOW_EXPORT_DROPDOWN, uiStateUpdaters.showExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].HIDE_EXPORT_DROPDOWN, uiStateUpdaters.hideExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].OPEN_DELETE_MODAL, uiStateUpdaters.openDeleteModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MAP_CONTROL, uiStateUpdaters.toggleMapControlUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].ADD_NOTIFICATION, uiStateUpdaters.addNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].REMOVE_NOTIFICATION, uiStateUpdaters.removeNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_SETTING, uiStateUpdaters.setExportImageSettingUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_DATA_URI, uiStateUpdaters.setExportImageDataUriUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_ERROR, uiStateUpdaters.setExportImageErrorUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].CLEANUP_EXPORT_IMAGE, uiStateUpdaters.cleanupExportImageUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].START_EXPORTING_IMAGE, uiStateUpdaters.startExportingImageUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_SELECTED_DATASET, uiStateUpdaters.setExportSelectedDatasetUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA_TYPE, uiStateUpdaters.setExportDataTypeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_FILTERED, uiStateUpdaters.setExportFilteredUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA, uiStateUpdaters.setExportDataUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_USER_MAPBOX_ACCESS_TOKEN, uiStateUpdaters.setUserMapboxAccessTokenUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_MAP_FORMAT, uiStateUpdaters.setExportMapFormatUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_MAP_HTML_MODE, uiStateUpdaters.setExportMapHTMLModeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].LOAD_FILES, uiStateUpdaters.loadFilesUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].LOAD_FILES_ERR, uiStateUpdaters.loadFilesErrUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_SPLIT_MAP, uiStateUpdaters.toggleSplitMapUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_LOCALE, uiStateUpdaters.setLocaleUpdater), _actionHandler);
/* Reducer */

var uiStateReducerFactory = function uiStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, _objectSpread(_objectSpread(_objectSpread({}, uiStateUpdaters.INITIAL_UI_STATE), initialState), {}, {
    initialState: initialState
  }));
};

exports.uiStateReducerFactory = uiStateReducerFactory;

var _default = uiStateReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,