"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _infoHelper = _interopRequireDefault(require("../../common/info-helper"));

var _switch = _interopRequireDefault(require("../../common/switch"));

var _styledComponents2 = require("../../common/styled-components");

var _utils = require("../../../utils/utils");

var _localization = require("../../../localization");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: space-between;\n\n  .vis-config-switch__title {\n    display: flex;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var propTypes = {
  layer: _propTypes["default"].object.isRequired,
  property: _propTypes["default"].string.isRequired,
  onChange: _propTypes["default"].func.isRequired,
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].bool, _propTypes["default"].func]),
  description: _propTypes["default"].string,
  disabled: _propTypes["default"].bool
};

var StyledVisConfigSwitch = _styledComponents["default"].div(_templateObject());

VisConfigSwitchFactory.deps = [_infoHelper["default"]];

function VisConfigSwitchFactory(InfoHelper) {
  var VisConfigSwitch = function VisConfigSwitch(_ref) {
    var _ref$layer = _ref.layer,
        id = _ref$layer.id,
        config = _ref$layer.config,
        property = _ref.property,
        _onChange2 = _ref.onChange,
        label = _ref.label,
        description = _ref.description,
        disabled = _ref.disabled;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents2.SidePanelSection, {
      disabled: Boolean(disabled)
    }, /*#__PURE__*/_react["default"].createElement(StyledVisConfigSwitch, {
      className: "vis-config-switch"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "vis-config-switch__title"
    }, label ? /*#__PURE__*/_react["default"].createElement(_styledComponents2.PanelLabel, null, label && /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: label
    }) || (0, _utils.capitalizeFirstLetter)(property)) : null, description ? /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(InfoHelper, {
      description: description,
      id: "".concat(id, "-").concat(property, "-description")
    })) : null), /*#__PURE__*/_react["default"].createElement("div", {
      className: "vis-config-switch__switch"
    }, /*#__PURE__*/_react["default"].createElement(_switch["default"], {
      checked: config.visConfig[property],
      id: "".concat(id, "-").concat(property, "-switch"),
      onChange: function onChange() {
        return _onChange2((0, _defineProperty2["default"])({}, property, !config.visConfig[property]));
      }
    }))));
  };

  VisConfigSwitch.propTypes = propTypes;
  return VisConfigSwitch;
}

var _default = VisConfigSwitchFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpZGUtcGFuZWwvbGF5ZXItcGFuZWwvdmlzLWNvbmZpZy1zd2l0Y2guanMiXSwibmFtZXMiOlsicHJvcFR5cGVzIiwibGF5ZXIiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJpc1JlcXVpcmVkIiwicHJvcGVydHkiLCJzdHJpbmciLCJvbkNoYW5nZSIsImZ1bmMiLCJsYWJlbCIsIm9uZU9mVHlwZSIsImJvb2wiLCJkZXNjcmlwdGlvbiIsImRpc2FibGVkIiwiU3R5bGVkVmlzQ29uZmlnU3dpdGNoIiwic3R5bGVkIiwiZGl2IiwiVmlzQ29uZmlnU3dpdGNoRmFjdG9yeSIsImRlcHMiLCJJbmZvSGVscGVyRmFjb3RyeSIsIkluZm9IZWxwZXIiLCJWaXNDb25maWdTd2l0Y2giLCJpZCIsImNvbmZpZyIsIkJvb2xlYW4iLCJ2aXNDb25maWciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFQyxzQkFBVUMsTUFBVixDQUFpQkMsVUFEUjtBQUVoQkMsRUFBQUEsUUFBUSxFQUFFSCxzQkFBVUksTUFBVixDQUFpQkYsVUFGWDtBQUdoQkcsRUFBQUEsUUFBUSxFQUFFTCxzQkFBVU0sSUFBVixDQUFlSixVQUhUO0FBSWhCSyxFQUFBQSxLQUFLLEVBQUVQLHNCQUFVUSxTQUFWLENBQW9CLENBQUNSLHNCQUFVSSxNQUFYLEVBQW1CSixzQkFBVVMsSUFBN0IsRUFBbUNULHNCQUFVTSxJQUE3QyxDQUFwQixDQUpTO0FBS2hCSSxFQUFBQSxXQUFXLEVBQUVWLHNCQUFVSSxNQUxQO0FBTWhCTyxFQUFBQSxRQUFRLEVBQUVYLHNCQUFVUztBQU5KLENBQWxCOztBQVNBLElBQU1HLHFCQUFxQixHQUFHQyw2QkFBT0MsR0FBVixtQkFBM0I7O0FBU0FDLHNCQUFzQixDQUFDQyxJQUF2QixHQUE4QixDQUFDQyxzQkFBRCxDQUE5Qjs7QUFDQSxTQUFTRixzQkFBVCxDQUFnQ0csVUFBaEMsRUFBNEM7QUFDMUMsTUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLDBCQUN0QnBCLEtBRHNCO0FBQUEsUUFDZHFCLEVBRGMsY0FDZEEsRUFEYztBQUFBLFFBQ1ZDLE1BRFUsY0FDVkEsTUFEVTtBQUFBLFFBRXRCbEIsUUFGc0IsUUFFdEJBLFFBRnNCO0FBQUEsUUFHdEJFLFVBSHNCLFFBR3RCQSxRQUhzQjtBQUFBLFFBSXRCRSxLQUpzQixRQUl0QkEsS0FKc0I7QUFBQSxRQUt0QkcsV0FMc0IsUUFLdEJBLFdBTHNCO0FBQUEsUUFNdEJDLFFBTnNCLFFBTXRCQSxRQU5zQjtBQUFBLHdCQVF0QixnQ0FBQyxtQ0FBRDtBQUFrQixNQUFBLFFBQVEsRUFBRVcsT0FBTyxDQUFDWCxRQUFEO0FBQW5DLG9CQUNFLGdDQUFDLHFCQUFEO0FBQXVCLE1BQUEsU0FBUyxFQUFDO0FBQWpDLG9CQUNFO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUNHSixLQUFLLGdCQUNKLGdDQUFDLDZCQUFELFFBQ0lBLEtBQUssaUJBQUksZ0NBQUMsOEJBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUVBO0FBQXRCLE1BQVYsSUFBOEMsa0NBQXNCSixRQUF0QixDQURqRCxDQURJLEdBSUYsSUFMTixFQU1HTyxXQUFXLGdCQUNWLDBEQUNFLGdDQUFDLFVBQUQ7QUFBWSxNQUFBLFdBQVcsRUFBRUEsV0FBekI7QUFBc0MsTUFBQSxFQUFFLFlBQUtVLEVBQUwsY0FBV2pCLFFBQVg7QUFBeEMsTUFERixDQURVLEdBSVIsSUFWTixDQURGLGVBYUU7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFLGdDQUFDLGtCQUFEO0FBQ0UsTUFBQSxPQUFPLEVBQUVrQixNQUFNLENBQUNFLFNBQVAsQ0FBaUJwQixRQUFqQixDQURYO0FBRUUsTUFBQSxFQUFFLFlBQUtpQixFQUFMLGNBQVdqQixRQUFYLFlBRko7QUFHRSxNQUFBLFFBQVEsRUFBRTtBQUFBLGVBQU1FLFVBQVEsc0NBQUdGLFFBQUgsRUFBYyxDQUFDa0IsTUFBTSxDQUFDRSxTQUFQLENBQWlCcEIsUUFBakIsQ0FBZixFQUFkO0FBQUE7QUFIWixNQURGLENBYkYsQ0FERixDQVJzQjtBQUFBLEdBQXhCOztBQWlDQWdCLEVBQUFBLGVBQWUsQ0FBQ3JCLFNBQWhCLEdBQTRCQSxTQUE1QjtBQUNBLFNBQU9xQixlQUFQO0FBQ0Q7O2VBQ2NKLHNCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIwIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBJbmZvSGVscGVyRmFjb3RyeSBmcm9tICdjb21wb25lbnRzL2NvbW1vbi9pbmZvLWhlbHBlcic7XG5pbXBvcnQgU3dpdGNoIGZyb20gJ2NvbXBvbmVudHMvY29tbW9uL3N3aXRjaCc7XG5pbXBvcnQge1NpZGVQYW5lbFNlY3Rpb24sIFBhbmVsTGFiZWx9IGZyb20gJ2NvbXBvbmVudHMvY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7Y2FwaXRhbGl6ZUZpcnN0TGV0dGVyfSBmcm9tICd1dGlscy91dGlscyc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ2xvY2FsaXphdGlvbic7XG5cbmNvbnN0IHByb3BUeXBlcyA9IHtcbiAgbGF5ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgcHJvcGVydHk6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGxhYmVsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYm9vbCwgUHJvcFR5cGVzLmZ1bmNdKSxcbiAgZGVzY3JpcHRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbFxufTtcblxuY29uc3QgU3R5bGVkVmlzQ29uZmlnU3dpdGNoID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gIC52aXMtY29uZmlnLXN3aXRjaF9fdGl0bGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbmA7XG5cblZpc0NvbmZpZ1N3aXRjaEZhY3RvcnkuZGVwcyA9IFtJbmZvSGVscGVyRmFjb3RyeV07XG5mdW5jdGlvbiBWaXNDb25maWdTd2l0Y2hGYWN0b3J5KEluZm9IZWxwZXIpIHtcbiAgY29uc3QgVmlzQ29uZmlnU3dpdGNoID0gKHtcbiAgICBsYXllcjoge2lkLCBjb25maWd9LFxuICAgIHByb3BlcnR5LFxuICAgIG9uQ2hhbmdlLFxuICAgIGxhYmVsLFxuICAgIGRlc2NyaXB0aW9uLFxuICAgIGRpc2FibGVkXG4gIH0pID0+IChcbiAgICA8U2lkZVBhbmVsU2VjdGlvbiBkaXNhYmxlZD17Qm9vbGVhbihkaXNhYmxlZCl9PlxuICAgICAgPFN0eWxlZFZpc0NvbmZpZ1N3aXRjaCBjbGFzc05hbWU9XCJ2aXMtY29uZmlnLXN3aXRjaFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInZpcy1jb25maWctc3dpdGNoX190aXRsZVwiPlxuICAgICAgICAgIHtsYWJlbCA/IChcbiAgICAgICAgICAgIDxQYW5lbExhYmVsPlxuICAgICAgICAgICAgICB7KGxhYmVsICYmIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXtsYWJlbH0gLz4pIHx8IGNhcGl0YWxpemVGaXJzdExldHRlcihwcm9wZXJ0eSl9XG4gICAgICAgICAgICA8L1BhbmVsTGFiZWw+XG4gICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgICAge2Rlc2NyaXB0aW9uID8gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPEluZm9IZWxwZXIgZGVzY3JpcHRpb249e2Rlc2NyaXB0aW9ufSBpZD17YCR7aWR9LSR7cHJvcGVydHl9LWRlc2NyaXB0aW9uYH0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ2aXMtY29uZmlnLXN3aXRjaF9fc3dpdGNoXCI+XG4gICAgICAgICAgPFN3aXRjaFxuICAgICAgICAgICAgY2hlY2tlZD17Y29uZmlnLnZpc0NvbmZpZ1twcm9wZXJ0eV19XG4gICAgICAgICAgICBpZD17YCR7aWR9LSR7cHJvcGVydHl9LXN3aXRjaGB9XG4gICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gb25DaGFuZ2Uoe1twcm9wZXJ0eV06ICFjb25maWcudmlzQ29uZmlnW3Byb3BlcnR5XX0pfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9TdHlsZWRWaXNDb25maWdTd2l0Y2g+XG4gICAgPC9TaWRlUGFuZWxTZWN0aW9uPlxuICApO1xuXG4gIFZpc0NvbmZpZ1N3aXRjaC5wcm9wVHlwZXMgPSBwcm9wVHlwZXM7XG4gIHJldHVybiBWaXNDb25maWdTd2l0Y2g7XG59XG5leHBvcnQgZGVmYXVsdCBWaXNDb25maWdTd2l0Y2hGYWN0b3J5O1xuIl19