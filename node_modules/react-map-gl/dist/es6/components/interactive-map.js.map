{"version":3,"sources":["../../../src/components/interactive-map.js"],"names":["React","useContext","useRef","useMemo","useEffect","forwardRef","PropTypes","StaticMap","MAPBOX_LIMITS","WebMercatorViewport","TransitionManager","MapContext","MapContextProvider","EventManager","MapController","useIsomorphicLayoutEffect","propTypes","Object","assign","maxZoom","number","minZoom","maxPitch","minPitch","onViewStateChange","func","onViewportChange","onInteractionStateChange","transitionDuration","oneOfType","string","transitionInterpolator","object","transitionInterruption","transitionEasing","onTransitionStart","onTransitionInterrupt","onTransitionEnd","scrollZoom","bool","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","onHover","onClick","onDblClick","onContextMenu","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","onMouseOut","onWheel","touchAction","eventRecognizerOptions","clickRadius","interactiveLayerIds","array","getCursor","controller","instanceOf","getDefaultCursor","isDragging","isHovering","defaultProps","onNativeClick","event","preventDefault","normalizeEvent","lngLat","offsetCenter","x","y","pos","viewport","props","width","height","point","unproject","getFeatures","map","queryParams","size","layers","queryRenderedFeatures","onEvent","callbackName","call","onPointerDown","pointerType","onPointerUp","onPointerMove","state","features","Boolean","length","isEntering","isExiting","setState","onPointerClick","callbacks","isDoubleClickEnabled","type","push","filter","forEach","cb","InteractiveMap","ref","parentContext","eventManager","recognizerOptions","eventCanvasRef","staticMapRef","_thisRef","thisRef","current","getMap","newState","style","cursor","inRender","viewportUpdateRequested","stateUpdateRequested","handleViewportChange","viewState","interactionState","oldViewState","context","container","handleInteractionStateChange","updateControllerOpts","opts","isInteractive","onStateChange","setOptions","onResize","setElement","on","pointerdown","bind","pointermove","pointerup","pointerleave","click","anyclick","dblclick","wheel","contextmenu","destroy","eventCanvasStyle","position","_child","supported"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useContext, useRef, useMemo, useEffect, forwardRef} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport StaticMap from './static-map';\nimport {MAPBOX_LIMITS} from '../utils/map-state';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport TransitionManager from '../utils/transition-manager';\nimport MapContext, {MapContextProvider} from './map-context';\n\nimport {EventManager} from 'mjolnir.js';\nimport MapController from '../utils/map-controller';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\n\nconst propTypes = Object.assign({}, StaticMap.propTypes, {\n  // Additional props on top of StaticMap\n\n  /** Viewport constraints */\n  // Max zoom level\n  maxZoom: PropTypes.number,\n  // Min zoom level\n  minZoom: PropTypes.number,\n  // Max pitch in degrees\n  maxPitch: PropTypes.number,\n  // Min pitch in degrees\n  minPitch: PropTypes.number,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  onInteractionStateChange: PropTypes.func,\n\n  /** Viewport transition **/\n  // transition duration for viewport change\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  // TransitionInterpolator instance, can be used to perform custom transitions.\n  transitionInterpolator: PropTypes.object,\n  // type of interruption of current transition on update.\n  transitionInterruption: PropTypes.number,\n  // easing function\n  transitionEasing: PropTypes.func,\n  // transition status update functions\n  onTransitionStart: PropTypes.func,\n  onTransitionInterrupt: PropTypes.func,\n  onTransitionEnd: PropTypes.func,\n\n  /** Enables control event handling */\n  // Scroll to zoom\n  scrollZoom: PropTypes.bool,\n  // Drag to pan\n  dragPan: PropTypes.bool,\n  // Drag to rotate\n  dragRotate: PropTypes.bool,\n  // Double click to zoom\n  doubleClickZoom: PropTypes.bool,\n  // Multitouch zoom\n  touchZoom: PropTypes.bool,\n  // Multitouch rotate\n  touchRotate: PropTypes.bool,\n  // Keyboard\n  keyboard: PropTypes.bool,\n\n  /** Event callbacks */\n  onHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onDblClick: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onWheel: PropTypes.func,\n\n  /** Custom touch-action CSS for the event canvas. Defaults to 'none' */\n  touchAction: PropTypes.string,\n\n  /** Custom hammer.js recognizer options */\n  eventRecognizerOptions: PropTypes.object,\n\n  /** Radius to detect features around a clicked point. Defaults to 0. */\n  clickRadius: PropTypes.number,\n\n  /** List of layers that are interactive */\n  interactiveLayerIds: PropTypes.array,\n\n  /** Accessor that returns a cursor style to show interactive state */\n  getCursor: PropTypes.func,\n\n  // A map control instance to replace the default map controller\n  // The object must expose a method: `setOptions(opts)`\n  controller: PropTypes.instanceOf(MapController)\n});\n\nconst getDefaultCursor = ({isDragging, isHovering}) =>\n  isDragging ? 'grabbing' : isHovering ? 'pointer' : 'grab';\n\nconst defaultProps = Object.assign(\n  {},\n  StaticMap.defaultProps,\n  MAPBOX_LIMITS,\n  TransitionManager.defaultProps,\n  {\n    onViewStateChange: null,\n    onViewportChange: null,\n    onClick: null,\n    onNativeClick: null,\n    onHover: null,\n    onContextMenu: event => event.preventDefault(),\n\n    scrollZoom: true,\n    dragPan: true,\n    dragRotate: true,\n    doubleClickZoom: true,\n    touchZoom: true,\n    touchRotate: false,\n    keyboard: true,\n\n    touchAction: 'none',\n    eventRecognizerOptions: {},\n    clickRadius: 0,\n    getCursor: getDefaultCursor\n  }\n);\n\n/* Event handlers */\nfunction normalizeEvent(event) {\n  if (event.lngLat || !event.offsetCenter) {\n    return event;\n  }\n\n  const {\n    offsetCenter: {x, y}\n  } = event;\n  const pos = [x, y];\n\n  const viewport = new WebMercatorViewport(\n    Object.assign({}, this.props, {\n      width: this.width,\n      height: this.height\n    })\n  );\n\n  event.point = pos;\n  event.lngLat = viewport.unproject(pos);\n\n  return event;\n}\n\nfunction getFeatures(pos) {\n  const {map} = this;\n\n  if (!map || !pos) {\n    return null;\n  }\n\n  const queryParams = {};\n  const size = this.props.clickRadius;\n\n  if (this.props.interactiveLayerIds) {\n    queryParams.layers = this.props.interactiveLayerIds;\n  }\n\n  try {\n    // This may fail if map is still loading\n    return map.queryRenderedFeatures(\n      size\n        ? // Radius enables point features, like marker symbols, to be clicked.\n          [\n            [pos[0] - size, pos[1] + size],\n            [pos[0] + size, pos[1] - size]\n          ]\n        : pos,\n      queryParams\n    );\n  } catch {\n    return null;\n  }\n}\n\nfunction onEvent(callbackName, event) {\n  const func = this.props[callbackName];\n  if (func) {\n    func(normalizeEvent.call(this, event));\n  }\n}\n\nfunction onPointerDown(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchStart' : 'onMouseDown', event);\n}\n\nfunction onPointerUp(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchEnd' : 'onMouseUp', event);\n}\n\n// eslint-disable-next-line complexity\nfunction onPointerMove(event) {\n  onEvent.call(this, event.pointerType === 'touch' ? 'onTouchMove' : 'onMouseMove', event);\n\n  if (!this.state.isDragging) {\n    const {onHover, interactiveLayerIds} = this.props;\n    let features;\n    event = normalizeEvent.call(this, event);\n    if (interactiveLayerIds || onHover) {\n      features = getFeatures.call(this, event.point);\n    }\n    if (onHover) {\n      // backward compatibility: v3 `onHover` interface\n      event.features = features;\n      onHover(event);\n    }\n\n    const isHovering = Boolean(interactiveLayerIds && features && features.length > 0);\n    const isEntering = isHovering && !this.state.isHovering;\n    const isExiting = !isHovering && this.state.isHovering;\n\n    if (isEntering) {\n      onEvent.call(this, 'onMouseEnter', event);\n    }\n    if (isExiting) {\n      onEvent.call(this, 'onMouseLeave', event);\n    }\n    if (isEntering || isExiting) {\n      this.setState({isHovering});\n    }\n  }\n}\n\nfunction onPointerClick(event) {\n  const {onClick, onNativeClick, onDblClick, doubleClickZoom} = this.props;\n  let callbacks = [];\n  const isDoubleClickEnabled = onDblClick || doubleClickZoom;\n\n  // `click` is only fired on single click. `anyclick` is fired twice if double clicking.\n  // `click` has a delay period after pointer up that prevents it from firing when\n  // double clicking. `anyclick` is always fired immediately after pointer up.\n  // If double click is turned off by the user, we want to immediately fire the\n  // onClick event. Otherwise, we wait to make sure it's a single click.\n  switch (event.type) {\n    case 'anyclick':\n      callbacks.push(onNativeClick);\n      if (!isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    case 'click':\n      if (isDoubleClickEnabled) {\n        callbacks.push(onClick);\n      }\n      break;\n\n    default:\n  }\n\n  callbacks = callbacks.filter(Boolean);\n\n  if (callbacks.length) {\n    event = normalizeEvent.call(this, event);\n    // backward compatibility: v3 `onClick` interface\n    event.features = getFeatures.call(this, event.point);\n    callbacks.forEach(cb => cb(event));\n  }\n}\n/* End of event handers */\n\n/* eslint-disable max-statements */\nconst InteractiveMap = forwardRef((props, ref) => {\n  const parentContext = useContext(MapContext);\n  const controller = useMemo(() => props.controller || new MapController(), []);\n  const eventManager = useMemo(\n    () =>\n      new EventManager(null, {\n        touchAction: props.touchAction,\n        recognizerOptions: props.eventRecognizerOptions\n      }),\n    []\n  );\n  const eventCanvasRef = useRef(null);\n  const staticMapRef = ref || useRef(null);\n\n  // Event handlers are registered once but need access to the latest props\n  // This is an anti-pattern, though it maintains a persistent reference to the latest props/state of this component\n  const _thisRef = useRef({\n    width: 0,\n    height: 0,\n    state: {\n      isHovering: false,\n      isDragging: false\n    }\n  });\n  const thisRef = _thisRef.current;\n  thisRef.props = props;\n  thisRef.map = staticMapRef.current && staticMapRef.current.getMap();\n  thisRef.setState = newState => {\n    thisRef.state = {...thisRef.state, ...newState};\n    eventCanvasRef.current.style.cursor = props.getCursor(thisRef.state);\n  };\n\n  let inRender = true;\n  let viewportUpdateRequested;\n  let stateUpdateRequested;\n\n  const handleViewportChange = (viewState, interactionState, oldViewState) => {\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      viewportUpdateRequested = [viewState, interactionState, oldViewState];\n      return;\n    }\n    const {onViewStateChange, onViewportChange} = props;\n\n    if (onViewStateChange) {\n      onViewStateChange({viewState, interactionState, oldViewState});\n    }\n    if (onViewportChange) {\n      onViewportChange(viewState, interactionState, oldViewState);\n    }\n  };\n\n  const context = useMemo(\n    () => ({\n      ...parentContext,\n      eventManager,\n      container: parentContext.container || eventCanvasRef.current\n    }),\n    [parentContext, eventCanvasRef.current]\n  );\n  context.onViewportChange = handleViewportChange;\n\n  const handleInteractionStateChange = interactionState => {\n    const {isDragging = false} = interactionState;\n    if (isDragging !== thisRef.state.isDragging) {\n      thisRef.setState({isDragging});\n    }\n\n    if (inRender) {\n      // Do not call the callbacks during render - may result in \"cannot update during an existing state transition\" error.\n      // Defer the update until after render\n      stateUpdateRequested = interactionState;\n      return;\n    }\n\n    const {onInteractionStateChange} = props;\n    if (onInteractionStateChange) {\n      onInteractionStateChange(interactionState);\n    }\n  };\n\n  const updateControllerOpts = () => {\n    const opts = Object.assign({}, props, props.viewState, {\n      isInteractive: Boolean(props.onViewStateChange || props.onViewportChange),\n      onViewportChange: handleViewportChange,\n      onStateChange: handleInteractionStateChange,\n      eventManager,\n      width: thisRef.width,\n      height: thisRef.height\n    });\n\n    controller.setOptions(opts);\n  };\n\n  const onResize = ({width, height}) => {\n    thisRef.width = width;\n    thisRef.height = height;\n    updateControllerOpts();\n    props.onResize({width, height});\n  };\n\n  useEffect(() => {\n    eventManager.setElement(eventCanvasRef.current);\n    // Register event handlers\n    eventManager.on({\n      pointerdown: onPointerDown.bind(thisRef),\n      pointermove: onPointerMove.bind(thisRef),\n      pointerup: onPointerUp.bind(thisRef),\n      pointerleave: onEvent.bind(thisRef, 'onMouseOut'),\n      click: onPointerClick.bind(thisRef),\n      anyclick: onPointerClick.bind(thisRef),\n      dblclick: onEvent.bind(thisRef, 'onDblClick'),\n      wheel: onEvent.bind(thisRef, 'onWheel'),\n      contextmenu: onEvent.bind(thisRef, 'onContextMenu')\n    });\n\n    // Clean up on unmount\n    return () => {\n      eventManager.destroy();\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (viewportUpdateRequested) {\n      // Perform deferred updates\n      handleViewportChange(...viewportUpdateRequested);\n    }\n    if (stateUpdateRequested) {\n      handleInteractionStateChange(stateUpdateRequested);\n    }\n  });\n\n  updateControllerOpts();\n\n  const {width, height, style, getCursor} = props;\n\n  const eventCanvasStyle = useMemo(\n    () => ({\n      position: 'relative',\n      ...style,\n      width,\n      height,\n      cursor: getCursor(thisRef.state)\n    }),\n    [style, width, height, getCursor, thisRef.state]\n  );\n\n  if (!viewportUpdateRequested || !thisRef._child) {\n    // Only rerender if no viewport update has been requested during render.\n    // Otherwise return the last rendered child, and invoke the callback when we're done.\n    thisRef._child = (\n      <MapContextProvider value={context}>\n        <div key=\"event-canvas\" ref={eventCanvasRef} style={eventCanvasStyle}>\n          <StaticMap\n            {...props}\n            width=\"100%\"\n            height=\"100%\"\n            style={null}\n            onResize={onResize}\n            ref={staticMapRef}\n          />\n        </div>\n      </MapContextProvider>\n    );\n  }\n\n  inRender = false;\n  return thisRef._child;\n});\n\nInteractiveMap.supported = StaticMap.supported;\nInteractiveMap.propTypes = propTypes;\nInteractiveMap.defaultProps = defaultProps;\n\nexport default InteractiveMap;\n"],"file":"interactive-map.js"}